name: Build binaries

on:
  workflow_call:
    inputs:
      # Specify the version in MAJOR.MINOR.PATCH format, without a leading 'v'
      version:
        required: true
        type: string
      ref:
        required: false
        type: string

jobs:
  build-binaries:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}

    env:
      # Cross-compiled targets will override this to `cross`.
      CARGO: cargo

    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            # Use cross to link oldest GLIBC possible.
            cross: true

          #          - target: x86_64-unknown-linux-musl
          #            os: ubuntu-latest
          #            cross: true

          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            cross: true

    #          - target: aarch64-unknown-linux-musl
    #            os: ubuntu-latest
    #            cross: true

    # - target: x86_64-apple-darwin
    #   os: macos-latest

    # - target: aarch64-apple-darwin
    #   os: macos-latest

    steps:
      - name: Checkout with ref
        if: inputs.ref != ''
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Checkout default
        if: inputs.ref == ''
        uses: actions/checkout@v4

      - name: Setup rust
        run: |
          rustup target add ${{ matrix.target }}

      - uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6

      - name: Setup LLVM on Linux (cross)
        if: matrix.cross
        run: |
          echo "MLIR_SYS_190_PREFIX=/usr/lib/llvm-19" >> $GITHUB_ENV
          echo "LLVM_SYS_191_PREFIX=/usr/lib/llvm-19" >> $GITHUB_ENV
          echo "TABLEGEN_190_PREFIX=/usr/lib/llvm-19" >> $GITHUB_ENV

      - name: Setup LLVM on MacOS
        if: matrix.system == 'macos'
        run: |
          brew install llvm@19
          brew reinstall zstd
          echo "MLIR_SYS_190_PREFIX=$(brew --prefix llvm@19)" >> $GITHUB_ENV
          echo "LLVM_SYS_191_PREFIX=$(brew --prefix llvm@19)" >> $GITHUB_ENV
          echo "TABLEGEN_190_PREFIX=$(brew --prefix llvm@19)" >> $GITHUB_ENV
          echo "LIBRARY_PATH=/opt/homebrew/lib" >> $GITHUB_ENV

      - name: Install cross
        if: matrix.cross
        run: |
          cargo install cross --git https://github.com/cross-rs/cross

      - name: Enable cross-compilation
        if: matrix.cross
        shell: bash
        run: |
          echo "CARGO=cross" >> $GITHUB_ENV

      - name: Build
        run: |
          export MLIR_SYS_190_PREFIX=${{ env.MLIR_SYS_190_PREFIX }}
          export LLVM_SYS_191_PREFIX=${{ env.LLVM_SYS_191_PREFIX }}
          export TABLEGEN_190_PREFIX=${{ env.TABLEGEN_190_PREFIX }}
          export LIBRARY_PATH=${{ env.LIBRARY_PATH }}
          ${{ env.CARGO }} build --release --locked --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          set -euxo pipefail
          PKG_FULL_NAME="starknet-foundry-v${{ inputs.version }}-${{ matrix.target }}"
          echo "PKG_FULL_NAME=$PKG_FULL_NAME" >> $GITHUB_ENV

          ./scripts/package.sh "${{ matrix.target }}" "$PKG_FULL_NAME"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.target }}
          path: ${{ env.PKG_FULL_NAME }}.*
