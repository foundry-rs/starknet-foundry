name: Publish snforge_std and sncast_std

on:
  workflow_call:
    inputs:
      dev_registry:
        required: false
        type: boolean
        default: false
      override_std_version:
        required: false
        type: string
      # snforge_std in the repository has a plugin dependency specified as a relative path, which must be overridden each time before publishing.
      plugin_dep_version:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      dev_registry:
        required: false
        type: boolean
        default: false
      override_std_version:
        required: false
        type: string
      # snforge_std in the repository has a plugin dependency specified as a relative path, which must be overridden each time before publishing.
      plugin_dep_version:
        required: true
        type: string

jobs:
  publish-to-registry:
    name: Publish packages to the registry
    runs-on: ubuntu-latest
    env:
      SCARB_REGISTRY_AUTH_TOKEN: ${{ inputs.dev_registry == true && secrets.DEV_SCARB_REGISTRY_AUTH_TOKEN || secrets.SCARB_REGISTRY_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@7b1c307e0dcbda6122208f10795a713336a9b35a
        with:
          toolchain: stable

      - uses: software-mansion/setup-scarb@v1
        with:
          # TODO(#3144) Remove
          scarb-version: "2.11.0"

      - name: Publish sncast_std
        working-directory: sncast_std
        run: |
          if [ -n "${{ inputs.override_std_version }}" ]; then
            sed -i.bak "/\[package\]/,/version =/ s/version = \".*/version = \"${{ inputs.override_std_version }}\"/" Scarb.toml
            rm Scarb.toml.bak 2> /dev/null
          fi
          scarb publish --allow-dirty ${{ inputs.dev_registry == true && '--index https://scarbs.dev/' || '' }}

      - name: Publish snforge_std
        working-directory: snforge_std
        run: |
          if [ -n "${{ inputs.override_std_version }}" ]; then
            sed -i.bak "/\[package\]/,/version =/ s/version = \".*/version = \"${{ inputs.override_std_version }}\"/" Scarb.toml
            rm Scarb.toml.bak 2> /dev/null
          fi
          if ${{ inputs.dev_registry == true }}; then
            scarb add snforge_scarb_plugin@=${{ inputs.plugin_dep_version }}
          else
            scarb add snforge_scarb_plugin@${{ inputs.plugin_dep_version }}
          fi
          
          scarb publish --allow-dirty ${{ inputs.dev_registry == true && '--index https://scarbs.dev/' || '' }}
