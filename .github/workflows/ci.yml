name: CI

on:
  pull_request:
  merge_group:

jobs:
  test-forge:
    env:
      SCARB_VERSION: "0.4.1"
    name: test ${{ matrix.runner.name }}
    runs-on: ${{ matrix.os.runner }}
    strategy:
      matrix:
          # TODO: do we want macs as well?
          # TODO: Windows {runner: windows-latest, name: windows x86-64 }
          os : [{runner: ubuntu-latest, name: linux x86-64 }]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Setup Scarb
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://docs.swmansion.com/scarb/install.sh | bash -s -- -v ${{ env.SCARB_VERSION }}
      - run: cargo test --manifest-path ./starknet-foundry/Cargo.toml -p forge

  test-cast:
    name: test ${{ matrix.runner.name }}
    runs-on: ${{ matrix.os.runner }}
    strategy:
      matrix:
          # TODO: do we want macs as well?
          # TODO: Windows {runner: windows-latest, name: windows x86-64 }
          os : [{runner: ubuntu-latest, name: linux x86-64 }]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - run: sudo apt install -y libgmp3-dev
      - run: pip install starknet-devnet
      - uses: asdf-vm/actions/setup@v2
      - name: Prepare for cast tests
        run: bash ./starknet-foundry/crates/cast/tests/utils/prepare_for_tests.sh
      - run: cargo test --manifest-path ./starknet-foundry/Cargo.toml -p cast

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Check forge formatting
        run: cargo fmt --manifest-path ./starknet-foundry/Cargo.toml --check -p forge
      - name: Check cast formatting
        run: cargo fmt --manifest-path ./starknet-foundry/Cargo.toml --check -p cast
      - name: Check test-collector formatting
        run: cargo fmt --manifest-path ./starknet-foundry/Cargo.toml --check -p test-collector

  clippy:
    runs-on: ubuntu-latest
    env:
      # Make sure CI fails on all warnings, including Clippy lints.
      RUSTFLAGS: "-Dwarnings"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy --manifest-path ./starknet-foundry/Cargo.toml --all-targets --all-features -- --no-deps
