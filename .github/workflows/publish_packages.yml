name: publish_packages.yml
on:
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  upload-to-registry:
    name: Upload packages to the registry
    runs-on: ubuntu-latest
    env:
      SCARB_REGISTRY_AUTH_TOKEN: ${{ secrets.SCARB_REGISTRY_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@7b1c307e0dcbda6122208f10795a713336a9b35a
        with:
          toolchain: stable

      - uses: software-mansion/setup-scarb@v1
        with:
          # todo: Use scarb stable version that support publishing plugins (after 2.8.4)
          scarb-version: "nightly-2024-11-09"

      - name: Check if package version exist in the registry
        id: check-versions
        run: |
          set -eo pipefail

          snforge_std_version=$(grep version snforge_std/Scarb.toml | cut -d '"' -f 2)
          snforge_scarb_plugin_version=$(grep version crates/snforge-scarb-plugin/Scarb.toml | cut -d '"' -f 2)
          sncast_std_version=$(grep version sncast_std/Scarb.toml | cut -d '"' -f 2)

          snforge_scarb_plugin=$(curl -s https://scarbs.xyz/api/v1/index/sn/fo/snforge_scarb_plugin.json | jq --arg version $snforge_scarb_plugin_version '[.[] | select(.v == $version)] | length > 0')
          snforge_std=$(curl -s https://scarbs.xyz/api/v1/index/sn/fo/snforge_std.json | jq --arg version $snforge_std_version '[.[] | select(.v == $version)] | length > 0')
          sncast_std=$(curl -s https://scarbs.xyz/api/v1/index/sn/ca/sncast_std.json | jq --arg version $sncast_std_version '[.[] | select(.v == $version)] | length > 0')

          echo "snforge_scarb_plugin=$snforge_scarb_plugin"
          echo "snforge_std=$snforge_std"
          echo "sncast_std=$sncast_std"

          echo "snforge_scarb_plugin=$snforge_scarb_plugin" >> $GITHUB_OUTPUT
          echo "snforge_std=$snforge_std" >> $GITHUB_OUTPUT
          echo "sncast_std=$sncast_std" >> $GITHUB_OUTPUT

      - name: Package and upload snforge_scarb_plugin
        if: steps.check-versions.outputs.snforge_scarb_plugin == 'false'
        working-directory: crates/snforge-scarb-plugin
        run: scarb publish

      - name: Package and upload snforge_std
        if: steps.check-versions.outputs.snforge_std == 'false'
        working-directory: snforge_std
        run: |
          ../scripts/set_plugin_version.sh
          scarb publish --allow-dirty

      - name: Package and upload sncast_std
        if: steps.check-versions.outputs.sncast_std == 'false'
        working-directory: sncast_std
        run: scarb publish --allow-dirty
